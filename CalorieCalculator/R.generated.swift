//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle

  let segue = segue()

  var string: string { .init(bundle: bundle, preferredLanguages: nil, locale: nil) }
  var color: color { .init(bundle: bundle) }
  var info: info { .init(bundle: bundle) }
  var file: file { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func string(bundle: Foundation.Bundle) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: nil)
  }
  func string(locale: Foundation.Locale) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: locale)
  }
  func string(preferredLanguages: [String], locale: Locale? = nil) -> string {
    .init(bundle: bundle, preferredLanguages: preferredLanguages, locale: locale)
  }
  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func info(bundle: Foundation.Bundle) -> info {
    .init(bundle: bundle)
  }
  func file(bundle: Foundation.Bundle) -> file {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.string` struct is generated, and contains static references to 2 localization tables.
  struct string {
    let bundle: Foundation.Bundle
    let preferredLanguages: [String]?
    let locale: Locale?
    var localizable: localizable { .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale)) }
    var main: main { .init(source: .init(bundle: bundle, tableName: "Main", preferredLanguages: preferredLanguages, locale: locale)) }

    func localizable(preferredLanguages: [String]) -> localizable {
      .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale))
    }
    func main(preferredLanguages: [String]) -> main {
      .init(source: .init(bundle: bundle, tableName: "Main", preferredLanguages: preferredLanguages, locale: locale))
    }


    /// This `_R.string.localizable` struct is generated, and contains static references to 14 localization keys.
    struct localizable {
      let source: RswiftResources.StringResource.Source

      /// en translation: High
      ///
      /// Key: Activity.high
      ///
      /// Locales: en, uk
      var activityHigh: RswiftResources.StringResource { .init(key: "Activity.high", tableName: "Localizable", source: source, developmentValue: "High", comment: nil) }

      /// en translation: Low
      ///
      /// Key: Activity.low
      ///
      /// Locales: en, uk
      var activityLow: RswiftResources.StringResource { .init(key: "Activity.low", tableName: "Localizable", source: source, developmentValue: "Low", comment: nil) }

      /// en translation: Medium
      ///
      /// Key: Activity.medium
      ///
      /// Locales: en, uk
      var activityMedium: RswiftResources.StringResource { .init(key: "Activity.medium", tableName: "Localizable", source: source, developmentValue: "Medium", comment: nil) }

      /// en translation: None
      ///
      /// Key: Activity.none
      ///
      /// Locales: en, uk
      var activityNone: RswiftResources.StringResource { .init(key: "Activity.none", tableName: "Localizable", source: source, developmentValue: "None", comment: nil) }

      /// en translation: Your result
      ///
      /// Key: Alert.result
      ///
      /// Locales: en, uk
      var alertResult: RswiftResources.StringResource { .init(key: "Alert.result", tableName: "Localizable", source: source, developmentValue: "Your result", comment: nil) }

      /// en translation: Show detail
      ///
      /// Key: Alert.showDetail
      ///
      /// Locales: en, uk
      var alertShowDetail: RswiftResources.StringResource { .init(key: "Alert.showDetail", tableName: "Localizable", source: source, developmentValue: "Show detail", comment: nil) }

      /// en translation: Physical Activity
      ///
      /// Key: Calculator.activityLabel
      ///
      /// Locales: en, uk
      var calculatorActivityLabel: RswiftResources.StringResource { .init(key: "Calculator.activityLabel", tableName: "Localizable", source: source, developmentValue: "Physical Activity", comment: nil) }

      /// en translation: Age
      ///
      /// Key: Calculator.ageLabel
      ///
      /// Locales: en, uk
      var calculatorAgeLabel: RswiftResources.StringResource { .init(key: "Calculator.ageLabel", tableName: "Localizable", source: source, developmentValue: "Age", comment: nil) }

      /// en translation: Calculate
      ///
      /// Key: Calculator.calculateButton
      ///
      /// Locales: en, uk
      var calculatorCalculateButton: RswiftResources.StringResource { .init(key: "Calculator.calculateButton", tableName: "Localizable", source: source, developmentValue: "Calculate", comment: nil) }

      /// en translation: Clear
      ///
      /// Key: Calculator.clearButton
      ///
      /// Locales: en, uk
      var calculatorClearButton: RswiftResources.StringResource { .init(key: "Calculator.clearButton", tableName: "Localizable", source: source, developmentValue: "Clear", comment: nil) }

      /// en translation: Height
      ///
      /// Key: Calculator.heightLabel
      ///
      /// Locales: en, uk
      var calculatorHeightLabel: RswiftResources.StringResource { .init(key: "Calculator.heightLabel", tableName: "Localizable", source: source, developmentValue: "Height", comment: nil) }

      /// en translation: Weight
      ///
      /// Key: Calculator.weightLabel
      ///
      /// Locales: en, uk
      var calculatorWeightLabel: RswiftResources.StringResource { .init(key: "Calculator.weightLabel", tableName: "Localizable", source: source, developmentValue: "Weight", comment: nil) }

      /// en translation: Female
      ///
      /// Key: Gender.famele
      ///
      /// Locales: en, uk
      var genderFamele: RswiftResources.StringResource { .init(key: "Gender.famele", tableName: "Localizable", source: source, developmentValue: "Female", comment: nil) }

      /// en translation: Male
      ///
      /// Key: Gender.male
      ///
      /// Locales: en, uk
      var genderMale: RswiftResources.StringResource { .init(key: "Gender.male", tableName: "Localizable", source: source, developmentValue: "Male", comment: nil) }
    }

    /// This `_R.string.main` struct is generated, and contains static references to 11 localization keys.
    struct main {
      let source: RswiftResources.StringResource.Source

      /// uk translation: Label
      ///
      /// Key: 4C3-Kz-3Wh.text
      ///
      /// Locales: uk
      var c3Kz3WhText: RswiftResources.StringResource { .init(key: "4C3-Kz-3Wh.text", tableName: "Main", source: source, developmentValue: nil, comment: nil) }

      /// uk translation: Physical Activity
      ///
      /// Key: 9jG-ws-mNc.text
      ///
      /// Locales: uk
      var jGWsMNcText: RswiftResources.StringResource { .init(key: "9jG-ws-mNc.text", tableName: "Main", source: source, developmentValue: nil, comment: nil) }

      /// uk translation: Calculate
      ///
      /// Key: Lfe-r9-he5.configuration.title
      ///
      /// Locales: uk
      var lfeR9He5ConfigurationTitle: RswiftResources.StringResource { .init(key: "Lfe-r9-he5.configuration.title", tableName: "Main", source: source, developmentValue: nil, comment: nil) }

      /// uk translation: Button
      ///
      /// Key: Lfe-r9-he5.normalTitle
      ///
      /// Locales: uk
      var lfeR9He5NormalTitle: RswiftResources.StringResource { .init(key: "Lfe-r9-he5.normalTitle", tableName: "Main", source: source, developmentValue: nil, comment: nil) }

      /// uk translation: Height
      ///
      /// Key: T09-qL-7gC.text
      ///
      /// Locales: uk
      var t09QL7gCText: RswiftResources.StringResource { .init(key: "T09-qL-7gC.text", tableName: "Main", source: source, developmentValue: nil, comment: nil) }

      /// uk translation: Weight
      ///
      /// Key: ZZf-gy-clR.text
      ///
      /// Locales: uk
      var zZfGyClRText: RswiftResources.StringResource { .init(key: "ZZf-gy-clR.text", tableName: "Main", source: source, developmentValue: nil, comment: nil) }

      /// uk translation: First
      ///
      /// Key: bzP-5g-O2e.segmentTitles[0]
      ///
      /// Locales: uk
      var bzP5gO2eSegmentTitles0: RswiftResources.StringResource { .init(key: "bzP-5g-O2e.segmentTitles[0]", tableName: "Main", source: source, developmentValue: nil, comment: nil) }

      /// uk translation: Second
      ///
      /// Key: bzP-5g-O2e.segmentTitles[1]
      ///
      /// Locales: uk
      var bzP5gO2eSegmentTitles1: RswiftResources.StringResource { .init(key: "bzP-5g-O2e.segmentTitles[1]", tableName: "Main", source: source, developmentValue: nil, comment: nil) }

      /// uk translation: Age
      ///
      /// Key: gor-ep-g8V.text
      ///
      /// Locales: uk
      var gorEpG8VText: RswiftResources.StringResource { .init(key: "gor-ep-g8V.text", tableName: "Main", source: source, developmentValue: nil, comment: nil) }

      /// uk translation: Clear
      ///
      /// Key: iTY-uE-UOR.configuration.title
      ///
      /// Locales: uk
      var iTYUEUORConfigurationTitle: RswiftResources.StringResource { .init(key: "iTY-uE-UOR.configuration.title", tableName: "Main", source: source, developmentValue: nil, comment: nil) }

      /// uk translation: Button
      ///
      /// Key: iTY-uE-UOR.normalTitle
      ///
      /// Locales: uk
      var iTYUEUORNormalTitle: RswiftResources.StringResource { .init(key: "iTY-uE-UOR.normalTitle", tableName: "Main", source: source, developmentValue: nil, comment: nil) }
    }
  }

  /// This `_R.color` struct is generated, and contains static references to 1 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }
  }

  /// This `_R.info` struct is generated, and contains static references to 1 properties.
  struct info {
    let bundle: Foundation.Bundle
    var uiApplicationSceneManifest: uiApplicationSceneManifest { .init(bundle: bundle) }

    func uiApplicationSceneManifest(bundle: Foundation.Bundle) -> uiApplicationSceneManifest {
      .init(bundle: bundle)
    }

    struct uiApplicationSceneManifest {
      let bundle: Foundation.Bundle

      let uiApplicationSupportsMultipleScenes: Bool = false

      var _key: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest"], key: "_key") ?? "UIApplicationSceneManifest" }
      var uiSceneConfigurations: uiSceneConfigurations { .init(bundle: bundle) }

      func uiSceneConfigurations(bundle: Foundation.Bundle) -> uiSceneConfigurations {
        .init(bundle: bundle)
      }

      struct uiSceneConfigurations {
        let bundle: Foundation.Bundle
        var _key: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations"], key: "_key") ?? "UISceneConfigurations" }
        var uiWindowSceneSessionRoleApplication: uiWindowSceneSessionRoleApplication { .init(bundle: bundle) }

        func uiWindowSceneSessionRoleApplication(bundle: Foundation.Bundle) -> uiWindowSceneSessionRoleApplication {
          .init(bundle: bundle)
        }

        struct uiWindowSceneSessionRoleApplication {
          let bundle: Foundation.Bundle
          var defaultConfiguration: defaultConfiguration { .init(bundle: bundle) }

          func defaultConfiguration(bundle: Foundation.Bundle) -> defaultConfiguration {
            .init(bundle: bundle)
          }

          struct defaultConfiguration {
            let bundle: Foundation.Bundle
            var uiSceneConfigurationName: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneConfigurationName") ?? "Default Configuration" }
            var uiSceneDelegateClassName: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneDelegateClassName") ?? "$(PRODUCT_MODULE_NAME).SceneDelegate" }
            var uiSceneStoryboardFile: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneStoryboardFile") ?? "Main" }
          }
        }
      }
    }
  }

  /// This `_R.file` struct is generated, and contains static references to 1 resource files.
  struct file {
    let bundle: Foundation.Bundle

    /// Resource file `Podfile`.
    var podfile: RswiftResources.FileResource { .init(name: "Podfile", pathExtension: "", bundle: bundle, locale: LocaleReference.none) }
  }

  /// This `_R.segue` struct is generated, and contains static references to 1 view controllers.
  struct segue {
    let homeViewController = homeViewController()

    /// This struct is generated for `HomeViewController`, and contains static references to 1 segues.
    struct homeViewController {

      /// Segue identifier `segue`.
      var segue: RswiftResources.SegueIdentifier<UIKit.UIStoryboardSegue, HomeViewController, ActivityListViewController> { .init(identifier: "segue") }
    }
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 2 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }
    var main: main { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func main(bundle: Foundation.Bundle) -> main {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
      try self.main.validate()
    }


    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {

      }
    }

    /// Storyboard `Main`.
    struct main: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UINavigationController

      let bundle: Foundation.Bundle

      let name = "Main"
      func validate() throws {

      }
    }
  }
}